#exec open('../../../build.py')
#
#env = getCommonEnvironment()
import os

exec open('../build-env.py')
env = GothamReleaseEnvironment()

# add dependencies

# with msvc, boost figures out which libraries to link
if os.name == 'posix':
  env.Append(LIBS = ['boost_python'])
  env.Append(LIBS = ['boost_thread'])

env.Append(LIBS = ['records'])
env.Append(LIBS = ['renderers'])
env.Append(LIBS = ['rasterizables'])
env.Append(LIBS = ['importance'])
env.Append(LIBS = ['mutators'])
env.Append(LIBS = ['path'])
env.Append(LIBS = ['primitives'])
env.Append(LIBS = ['surfaces'])
env.Append(LIBS = ['shading'])
env.Append(LIBS = ['geometry'])

# openexr libraries
env.Append(LIBS = ['Iex'])
env.Append(LIBS = ['IlmImf'])
env.Append(LIBS = ['Imath'])
env.Append(LIBS = ['Half'])
env.Append(LIBS = ['z'])

#env.Program('testVariance', ['testVariance.cpp'])

# with msvc, boost figures out which libraries to link
if os.name == 'posix':
  env.Append(LIBS = ['boost_python'])
  env.Append(LIBS = ['boost_thread'])

# qt libraries
env.Append(LIBS = ['QtCore'])
env.Append(LIBS = ['QtXml'])
env.Append(LIBS = ['QtGui'])
env.Append(LIBS = ['QtOpenGL'])

# gl libraries
env.Append(LIBS = ['GL'])
env.Append(LIBS = ['GLU'])
env.Append(LIBS = ['GLEW'])
env.Append(LIBS = ['QGLViewer'])

env.Append(LIBPATH = ['../geometry',
                      '../importance',
                      '../path',
                      '../mutators',
                      '../primitives',
                      '../rasterizables',
                      '../records',
                      '../records',
                      '../renderers',
                      '../shading',
                      '../surfaces'])

# create a shared library
gothamLib = env.SharedLibrary('gotham', ['exportApi.cpp', 'Gotham.cpp', 'ShaderApi.cpp'], SHLIBPREFIX = '')

# install the distribution
try:
  dir = os.environ["GOTHAMHOME"] + '/lib'
  Default(env.Install(dir, source = gothamLib))
  Default(env.Install(dir, source = 'api.py'))
  Default(env.Install(dir, source = 'objtogoth.py'))
  Default(env.Install(dir, source = 'wavefront.py'))
  dir = os.environ["GOTHAMHOME"] + '/bin'
  Default(env.Install(dir, source = 'pbslc'))
except:
  print "Warning: $GOTHAMHOME not defined! Gotham could not be installed."

