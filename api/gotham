#!/usr/bin/env python
import sys
import inspect
import os
import string

def options():
  pass

def usage():
  print 'Usage: gotham file0 [file1 ...]'
  options()
  exit(-1)

# we require that api and other libraries reside in a known
# directory relative to this script

# figure out the absolute path of the directory containing this script
dir = os.path.dirname(inspect.getabsfile(usage))

# the directory we want to include is ../lib
dir = os.path.join(os.path.dirname(dir), 'lib')

# the directories searched for shared libraries must include
# this directory which houses 'plugins'
variableName = {'posix'  : 'LD_LIBRARY_PATH',
                'darwin' : 'DYLD_LIBRARY_PATH',
                'nt'     : 'PATH'}
pathSeparator = {'posix'  : ':',
                 'darwin' : ':',
                 'nt'     : ';'}

try:
  varName = variableName[os.name]
except:
  # continue and hope for the best
  print 'Warning: unknown OS. Could not set shared library path.'

oldPath = ''
try:
  oldPath = os.environ[varName]
except:
  # shared lib path not defined, treat it as empty
  pass

# is it set correctly?
if string.split(oldPath,pathSeparator[os.name])[0] != dir:
  path = dir + pathSeparator[os.name] + oldPath
  os.environ[variableName[os.name]] = path
  # recurse with the new environment
  os.execvp("gotham",sys.argv)

# Python's path must also include this directory
sys.path += [dir]

# do the import
# we may want to do this after parsing the arguments
# so we can intercept a "silence" command
from api import *

# execute files in arguments
if len(sys.argv) < 2:
  print 'Error: Please specify at least one input scene file.'
  usage()
  exit(-1)

for arg in sys.argv[1:]:
  exec open(arg)

