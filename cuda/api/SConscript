import os

Import('env')

# add dependencies
# with msvc, boost figures out which libraries to link
if os.name == 'posix':
  env.Append(LIBS = ['boost_python'])
  env.Append(LIBS = ['boost_thread'])

# Gotham library
env.Append(LIBS = ['gotham'])

# cuda Gotham libraries
env.Append(LIBS = ['cudaprimitives'])
env.Append(LIBS = ['cudashading'])
env.Append(LIBS = ['cudarenderers'])
env.Append(LIBS = ['cudanumeric'])
env.Append(LIBS = ['stdcuda'])

# openexr libraries
env.Append(LIBS = ['Iex'])
env.Append(LIBS = ['IlmImf'])
env.Append(LIBS = ['Imath'])
env.Append(LIBS = ['Half'])
env.Append(LIBS = ['z'])

# cuda libraries
env.Append(LIBS = ['cudart'])
env.Append(LIBPATH = ['/usr/local/cuda/lib'])

# qt libraries
env.Append(LIBS = ['QtCore'])
env.Append(LIBS = ['QtXml'])
env.Append(LIBS = ['QtGui'])
env.Append(LIBS = ['QtOpenGL'])

# gl libraries
env.Append(LIBS = ['GL'])
env.Append(LIBS = ['GLU'])
env.Append(LIBS = ['GLEW'])
env.Append(LIBS = ['QGLViewer'])

# Gotham library path
env.Append(LIBPATH = [os.environ["GOTHAMHOME"] + '/lib'])

# CUDA Gotham library paths
env.Append(LIBPATH = ['../primitives',
                      '../shading',
                      '../renderers',
                      '../numeric',
                      '../../../stdcuda'])

# create a shared library
cudaGothamLib = env.SharedLibrary('cudagotham', ['CudaGotham.cpp', 'exportCudaGotham.cpp'])

# install the distribution
try:
  dir = os.environ["GOTHAMHOME"] + '/lib'
  Default(env.Install(dir, source = cudaGothamLib))
  dir = os.environ["GOTHAMHOME"] + '/bin'
  Default(env.Install(dir, source = 'cuda_pbslc'))
except:
  print "Warning: $GOTHAMHOME not defined! Gotham could not be installed."

